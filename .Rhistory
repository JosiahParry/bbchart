u_name <- "josiah.parry@gmail.com"
pw <- "fuckb1llboard!"
b_url <- "https://www.billboard.com/login"
library(rvest)
library(tidyverse)
session <- html_session("https://www.billboard.com/login")
html_form(session)
html_form(session) %>%
pluck(2)
html_form(session) %>%
pluck(2) %>%
set_values(text = u_name, pass = pw)
html_form(session) %>%
pluck(2) %>%
set_values(name = u_name, pass = pw)
html_form(session) %>%
pluck(2) %>%
set_values(name = u_name, pass = pw) %>%
submit_form()
?submit_form
bb_login <- html_form(session) %>%
pluck(2) %>%
set_values(name = u_name, pass = pw)
submit_form(session, bb_login)
?bbcharts::bb_chart()
bbcharts::chart_table
bbcharts::bb_chart("hot-100", Sys.Date() - 14)
usethis::ui_warn("sdfhsdf")
gen_chart_url <- function(chart_url, date = Sys.Date()) {
chart_date <- floor_date(as.Date(date), "weeks")
ifelse(chart_url %in% bad_charts,
{
base_url <- paste("https://www.billboard.com/charts", chart_url, sep = "/")
usethis::ui_warn("Chart does not use a date, `date` will be ignored.")
},
base_url <- paste("https://www.billboard.com/charts", chart_url, chart_date, sep = "/")
)
}
gen_chart_url
gen_chart_url()
gen_chart_url <- function(chart_url, date = Sys.Date()) {
chart_date <- lubridate::floor_date(as.Date(date), "weeks")
ifelse(chart_url %in% bad_charts,
{
base_url <- paste("https://www.billboard.com/charts", chart_url, sep = "/")
usethis::ui_warn("Chart does not use a date, `date` will be ignored.")
},
base_url <- paste("https://www.billboard.com/charts", chart_url, chart_date, sep = "/")
)
}
gen_chart_url()
gen_chart_url("hot-100")
devtools::load_all()
gen_chart_url("hot-100")
bbcharts::bad_charts
gen_chart_url("german-albums")
?usethis::ui_warn
gen_chart_url <- function(chart_url, date = Sys.Date()) {
chart_date <- lubridate::floor_date(as.Date(date), "weeks")
ifelse(chart_url %in% bad_charts,
{
base_url <- paste("https://www.billboard.com/charts", chart_url, sep = "/")
warning("Chart does not use a date, `date` will be ignored.")
},
base_url <- paste("https://www.billboard.com/charts", chart_url, chart_date, sep = "/")
)
}
gen_chart_url("german-albums")
gen_chart_url <- function(chart_url, date = Sys.Date()) {
chart_date <- lubridate::floor_date(as.Date(date), "weeks")
ifelse(chart_url %in% bad_charts,
{
base_url <- paste("https://www.billboard.com/charts", chart_url, sep = "/")
usethis::ui_warn("Chart does not use a date, `date` will be ignored.")
},
base_url <- paste("https://www.billboard.com/charts", chart_url, chart_date, sep = "/")
)
}
gen_chart_url("german-albums")
gen_chart_url <- function(chart_url, date = Sys.Date()) {
chart_date <- lubridate::floor_date(as.Date(date), "weeks")
ifelse(chart_url %in% bad_charts,
{
base_url <- paste("https://www.billboard.com/charts", chart_url, sep = "/")
usethis::ui_warn("Chart does not use a date, `date` will be ignored.")
},
base_url <- paste("https://www.billboard.com/charts", chart_url, chart_date, sep = "/")
)
base_url
}
gen_chart_url("german-albums")
gen_chart_url("hot-100", Sys.Date() - 14)
bb_url <- gen_chart_url("hot-100", Sys.Date() - 14)
jump_to(session, bb_url)
bbcharts::chart_table
l
bb_url <- gen_chart_url("streaming-songs", Sys.Date() - 14)
jump_to(session, bb_url)
bb_sesh <- jump_to(session, bb_url)
title <- bb_sesh %>%
html_nodes(".chart-list-item__title") %>%
html_text(trim = TRUE)
title
httr::stop_for_status
?httr::stop_for_status
bb_url <- gen_chart_url("streaming-songs", Sys.Date() - 14)
bb_url <-
bb_chart("streaming-songs", Sys.Date() - 14)
bb_chart("streaming-songs", Sys.Date() - 14)  %>% View()
bbcharts::chart_table
bb_chart("radio_songs", Sys.Date() - 14)  %>% View()
gen_chart_url("radio_songs", Sys.Date() - 14)
bb_chart("radio-songs", Sys.Date() - 14)  %>% View()
theme_bari <- function() {
theme_minimal() +
theme(
panel.grid.major.y = element_line(
size = .75
),
panel.grid = element_line(),
panel.border = element_rect(size = .5, fill = NA, color = "#524d4d"),
text = element_text(family = "HelveticaNeue-CondensedBold"),
plot.title = element_text(color = "#8d0909", size = 24),
plot.subtitle = element_text(color = "#2e2828", size = 18),
plot.caption = element_text(
color = "#524d4d", size = 8,
hjust = 1,
margin = margin(t = 10),
family = "Avenir Next Condensed Medium"
)
)
}
cstools::quote_rsp_e(10)
cstools::quote_rsp_e(10)*1.1
cstools::quote_rsp_e(20)*1.1
cstools::quote_rsp_e(15)*1.1
cstools::quote_rsp_e(18)*1.1
cstools::quote_rsp_e(15)*1.1
